generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch","fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Course {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  title       String
  description String?
  imageUrl    String?
  price       Float?
  isPublished Boolean   @default(false)
  categoryId  String? @db.ObjectId
  attachments Attachment[]
  chapters    Chapter[]
  purchases   Purchase[]
  category    Category? @relation(fields: [categoryId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  name    String  @unique
  courses Course[]
}

model Attachment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  url       String
  courseId  String @db.ObjectId
  course    Course   @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Chapter {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  position    Int
  isPublished Boolean  @default(false)
  isFree      Boolean  @default(false)
  videoUrl    String?
  courseId    String @db.ObjectId
  course      Course   @relation(fields: [courseId], references: [id])
  muxData     MuxData?
  userProgress UserProgress[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MuxData {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  assetId   String
  playbackId String?
  chapterId String @unique @db.ObjectId
  chapter   Chapter @relation(fields: [chapterId], references: [id])
}

model UserProgress {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  isCompleted Boolean  @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  chapterId String @unique @db.ObjectId
  chapter   Chapter @relation(fields: [chapterId], references: [id])
  @@unique([userId, chapterId])
}

model Purchase {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  courseId  String @db.ObjectId
  course    Course   @relation(fields: [courseId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([userId, courseId])
}

model StripeCustomer {
  id               String  @id @default(auto()) @map("_id") @db.ObjectId
  userId           String  @unique
  stripeCustomerId String  @unique
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
